//
// ReconstructionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class ReconstructionAPI {
    /**
     Get reconstructed cities list
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getCities(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [ReconstructedCity]?,_ error: Error?) -> Void)) {
        getCitiesWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get reconstructed cities list
     - GET /supported_cities
     - List of scanned and reconstructed cities. Localization is possible only inside this zones.
     - returns: RequestBuilder<[ReconstructedCity]> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func getCitiesWithRequestBuilder() -> RequestBuilder<[ReconstructedCity]> {
        let path = "/supported_cities"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[ReconstructedCity]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
